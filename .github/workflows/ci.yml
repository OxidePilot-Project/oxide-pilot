name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  issues: write
  checks: write
  actions: read

jobs:
  build-dev:
    name: Development Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gtk+3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src-frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd src-frontend
          npm ci

      - name: Build frontend
        run: |
          cd src-frontend
          npm run build

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install NSIS & WiX (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          choco install nsis -y
          choco install wixtoolset -y

      - name: Build workspace (check compilation)
        run: |
          cargo build --workspace --no-default-features --features "surrealdb-metrics" --verbose

      - name: Upload build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: oxide-pilot-dev-${{ matrix.os }}
          path: |
            target/release/oxide-pilot*
          retention-days: 7